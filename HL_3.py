# 1. Даны значения зарплат из выборки выпускников: 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.
# Посчитать (желательно без использования статистических методов наподобие std, var, mean)
# среднее арифметическое, среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.
salaries = [100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]

#Сортируем по возрастанию
salaries = sorted(salaries)

# Среднее арифметическое
arith_mean = sum(salaries)/len(salaries)
print('Среднее арифметическое',arith_mean)

# Среднее квадратическое
squar_sum = 0
for i in salaries:
    squar_sum = squar_sum + (i - arith_mean) ** 2


import math

mean_square = math.sqrt(squar_sum/len(salaries))
print('Среднее квадратическое',mean_square)

# смещенную  оценка дисперсии

variance = squar_sum / len(salaries)
print('смещенную  оценка дисперсии',variance)

# несмещенную  оценка дисперсии

variance_unbiased = squar_sum / (len(salaries) -1)
print('несмещенную  оценка дисперсии',variance_unbiased)

# 2. В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых.
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?

def combinations(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))

otvet_2 = 5/8 * 4/7 * 5/12 + 4/11
print('Ответ на вторую задачу:',otvet_2)

# 3. На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень.
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6.
# Найти вероятность того, что выстрел произведен: a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.

# Вероятность попадания в мишень каждым спортсменом равновероятны:
p_strelok_1 = 1/3
p_strelok_2 = 1/3
p_strelok_3 = 1/3

r_a_1 = 0.9
r_a_2 = 0.8
r_a_3 = 0.6

#По формуле полной вероятности вероятность того, что мишень будет поражена равна
r = p_strelok_1 * r_a_1 + p_strelok_2 * r_a_2 + p_strelok_3 * r_a_3

# По формуле Байеса, вероятность того, что по мишени выстрелил  спортсмены, равна:
r_1 = (p_strelok_1 * r_a_1) / r
r_2 = (p_strelok_2 * r_a_2) / r
r_3 = (p_strelok_3 * r_a_3) / r

print('Ответ на третью задачу:',r_1, r_2, r_3)

# 4. В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило столько же,
# сколько на A и B вместе. Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8.
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию.
# Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?

# по условиям задачи
p_a = 0.25
p_b = 0.25
p_c = 0.5

r_a = 0.8
r_b = 0.7
r_c = 0.9

#По формуле полной вероятности вероятность того, что студент сдаст сессию равна:

r = p_a * r_a + p_b * r_b + p_c * r_c

# По формуле Байеса, вероятность того, что что Студент учится: a). на факультете A б). на факультете B в). на факультете C?, равна:
r_a = (p_a * r_a) / r
r_b = (p_b * r_b) / r
r_c = (p_c * r_c) / r

print('Ответ на четвертую задачу:',r_a, r_b, r_c)

# 5.Устройство состоит из трех деталей.
# Для первой детали вероятность выйти из строя в первый месяц равна 0.1, для второй - 0.2, для третьей - 0.25.
# Какова вероятность того, что в первый месяц выйдут из строя: а). все детали б). только две детали в). хотя бы одна деталь г). от одной до двух деталей?

p_1 = 0.1
p_2 = 0.2
p_3 = 0.25

q_1 = 1 - p_1
q_2 = 1 - p_2
q_3 = 1 - p_3

# а) все детали вышли из строя:

x_a = p_1 * p_2 * p_3
print('Ответ на пятую задачу, п. а :',x_a)

# б) только две детали вышли из строя:

x_b = p_1 * p_2 * q_3 + p_1 * q_2 * p_3 + q_1 * p_2 * p_3

print('Ответ на пятую задачу, п. b :',x_b)

# в) хотя бы одна деталь вышли из строя:
x_с = 1 - (q_1 * q_2 * q_3)
print('Ответ на пятую задачу, п. c :',x_с)

# г) от одной до двух деталей вышли из строя:

# можно представить как сумму несовместных событий X2 = (За смену выйдут из строя 2 детали) и X1 = (За смену выйдут из строя 1 деталь)
x2 = p_1 * p_2 * q_3 + p_1 * q_2 * p_3 + q_1 * p_2 * p_3
x1 = p_1 * q_2 * q_3 + q_1 * p_2 * q_3 + q_1 * q_2 * p_3

x_d = x2+x1
print('Ответ на пятую задачу, п. d :',x_d)